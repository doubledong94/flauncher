// Mocks generated by Mockito 5.3.2 from annotations
// in flauncher/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:typed_data' as _i17;

import 'package:drift/drift.dart' as _i6;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i8;
import 'package:flauncher/database.dart' as _i7;
import 'package:flauncher/flauncher_channel.dart' as _i9;
import 'package:flauncher/gradients.dart' as _i2;
import 'package:flauncher/providers/apps_service.dart' as _i13;
import 'package:flauncher/providers/settings_service.dart' as _i12;
import 'package:flauncher/providers/wallpaper_service.dart' as _i11;
import 'package:flauncher/unsplash_service.dart' as _i5;
import 'package:flutter/foundation.dart' as _i15;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFLauncherGradient_0 extends _i1.SmartFake implements _i2.FLauncherGradient {
  _FakeFLauncherGradient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteConfigSettings_3 extends _i1.SmartFake implements _i4.RemoteConfigSettings {
  _FakeRemoteConfigSettings_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteConfigValue_4 extends _i1.SmartFake implements _i4.RemoteConfigValue {
  _FakeRemoteConfigValue_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhoto_5 extends _i1.SmartFake implements _i5.Photo {
  _FakePhoto_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrationStrategy_6 extends _i1.SmartFake implements _i6.MigrationStrategy {
  _FakeMigrationStrategy_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$AppsTable_7 extends _i1.SmartFake implements _i7.$AppsTable {
  _Fake$AppsTable_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CategoriesTable_8 extends _i1.SmartFake implements _i7.$CategoriesTable {
  _Fake$CategoriesTable_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$AppsCategoriesTable_9 extends _i1.SmartFake implements _i7.$AppsCategoriesTable {
  _Fake$AppsCategoriesTable_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_10 extends _i1.SmartFake implements _i6.GeneratedDatabase {
  _FakeGeneratedDatabase_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_11 extends _i1.SmartFake implements _i6.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_12 extends _i1.SmartFake implements _i6.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_13 extends _i1.SmartFake implements _i6.DatabaseConnection {
  _FakeDatabaseConnection_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSqlTypes_14 extends _i1.SmartFake implements _i6.SqlTypes {
  _FakeSqlTypes_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_15 extends _i1.SmartFake implements _i6.QueryExecutor {
  _FakeQueryExecutor_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_16 extends _i1.SmartFake implements _i8.StreamQueryStore {
  _FakeStreamQueryStore_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_17 extends _i1.SmartFake implements _i6.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_18 extends _i1.SmartFake implements _i6.Migrator {
  _FakeMigrator_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_19<T extends _i6.Table, D> extends _i1.SmartFake implements _i6.InsertStatement<T, D> {
  _FakeInsertStatement_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_20<T extends _i6.Table, D> extends _i1.SmartFake implements _i6.UpdateStatement<T, D> {
  _FakeUpdateStatement_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_21<T extends _i6.HasResultSet, D> extends _i1.SmartFake
    implements _i6.SimpleSelectStatement<T, D> {
  _FakeSimpleSelectStatement_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_22<FirstT extends _i6.HasResultSet, FirstD> extends _i1.SmartFake
    implements _i6.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_23<T extends _i6.Table, D> extends _i1.SmartFake implements _i6.DeleteStatement<T, D> {
  _FakeDeleteStatement_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_24<T> extends _i1.SmartFake implements _i6.Selectable<T> {
  _FakeSelectable_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_25 extends _i1.SmartFake implements _i6.GenerationContext {
  _FakeGenerationContext_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FLauncherChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockFLauncherChannel extends _i1.Mock implements _i9.FLauncherChannel {
  MockFLauncherChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<List<dynamic>> getApplications() => (super.noSuchMethod(
        Invocation.method(
          #getApplications,
          [],
        ),
        returnValue: _i10.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i10.Future<List<dynamic>>);
  @override
  _i10.Future<bool> applicationExists(String? packageName) => (super.noSuchMethod(
        Invocation.method(
          #applicationExists,
          [packageName],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<void> launchApp(String? packageName) => (super.noSuchMethod(
        Invocation.method(
          #launchApp,
          [packageName],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> openSettings() => (super.noSuchMethod(
        Invocation.method(
          #openSettings,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> openAppInfo(String? packageName) => (super.noSuchMethod(
        Invocation.method(
          #openAppInfo,
          [packageName],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> uninstallApp(String? packageName) => (super.noSuchMethod(
        Invocation.method(
          #uninstallApp,
          [packageName],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<bool> isDefaultLauncher() => (super.noSuchMethod(
        Invocation.method(
          #isDefaultLauncher,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<bool> checkForGetContentAvailability() => (super.noSuchMethod(
        Invocation.method(
          #checkForGetContentAvailability,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<void> startAmbientMode() => (super.noSuchMethod(
        Invocation.method(
          #startAmbientMode,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void addAppsChangedListener(void Function(Map<dynamic, dynamic>)? listener) => super.noSuchMethod(
        Invocation.method(
          #addAppsChangedListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WallpaperService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWallpaperService extends _i1.Mock implements _i11.WallpaperService {
  MockWallpaperService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FLauncherGradient get gradient => (super.noSuchMethod(
        Invocation.getter(#gradient),
        returnValue: _FakeFLauncherGradient_0(
          this,
          Invocation.getter(#gradient),
        ),
      ) as _i2.FLauncherGradient);
  @override
  set settingsService(_i12.SettingsService? settingsService) => super.noSuchMethod(
        Invocation.setter(
          #settingsService,
          settingsService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i10.Future<void> pickWallpaper() => (super.noSuchMethod(
        Invocation.method(
          #pickWallpaper,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> randomFromUnsplash(String? query) => (super.noSuchMethod(
        Invocation.method(
          #randomFromUnsplash,
          [query],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i5.Photo>> searchFromUnsplash(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchFromUnsplash,
          [query],
        ),
        returnValue: _i10.Future<List<_i5.Photo>>.value(<_i5.Photo>[]),
      ) as _i10.Future<List<_i5.Photo>>);
  @override
  _i10.Future<void> setFromUnsplash(_i5.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #setFromUnsplash,
          [photo],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setGradient(_i2.FLauncherGradient? fLauncherGradient) => (super.noSuchMethod(
        Invocation.method(
          #setGradient,
          [fLauncherGradient],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void addListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppsService extends _i1.Mock implements _i13.AppsService {
  MockAppsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);
  @override
  List<_i7.App> get applications => (super.noSuchMethod(
        Invocation.getter(#applications),
        returnValue: <_i7.App>[],
      ) as List<_i7.App>);
  @override
  List<_i7.CategoryWithApps> get categoriesWithApps => (super.noSuchMethod(
        Invocation.getter(#categoriesWithApps),
        returnValue: <_i7.CategoryWithApps>[],
      ) as List<_i7.CategoryWithApps>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i10.Future<void> launchApp(_i7.App? app) => (super.noSuchMethod(
        Invocation.method(
          #launchApp,
          [app],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> openAppInfo(_i7.App? app) => (super.noSuchMethod(
        Invocation.method(
          #openAppInfo,
          [app],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> uninstallApp(_i7.App? app) => (super.noSuchMethod(
        Invocation.method(
          #uninstallApp,
          [app],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> openSettings() => (super.noSuchMethod(
        Invocation.method(
          #openSettings,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<bool> isDefaultLauncher() => (super.noSuchMethod(
        Invocation.method(
          #isDefaultLauncher,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<void> startAmbientMode() => (super.noSuchMethod(
        Invocation.method(
          #startAmbientMode,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> addToCategory(
    _i7.App? app,
    _i7.Category? category, {
    bool? shouldNotifyListeners = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCategory,
          [
            app,
            category,
          ],
          {#shouldNotifyListeners: shouldNotifyListeners},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> removeFromCategory(
    _i7.App? app,
    _i7.Category? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromCategory,
          [
            app,
            category,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> saveOrderInCategory(_i7.Category? category) => (super.noSuchMethod(
        Invocation.method(
          #saveOrderInCategory,
          [category],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void reorderApplication(
    _i7.Category? category,
    int? oldIndex,
    int? newIndex,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #reorderApplication,
          [
            category,
            oldIndex,
            newIndex,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<void> addCategory(
    String? categoryName, {
    bool? shouldNotifyListeners = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCategory,
          [categoryName],
          {#shouldNotifyListeners: shouldNotifyListeners},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> renameCategory(
    _i7.Category? category,
    String? categoryName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #renameCategory,
          [
            category,
            categoryName,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> deleteCategory(_i7.Category? category) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [category],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> moveCategory(
    int? oldIndex,
    int? newIndex,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveCategory,
          [
            oldIndex,
            newIndex,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> hideApplication(_i7.App? application) => (super.noSuchMethod(
        Invocation.method(
          #hideApplication,
          [application],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> unHideApplication(_i7.App? application) => (super.noSuchMethod(
        Invocation.method(
          #unHideApplication,
          [application],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setCategoryType(
    _i7.Category? category,
    _i7.CategoryType? type, {
    bool? shouldNotifyListeners = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCategoryType,
          [
            category,
            type,
          ],
          {#shouldNotifyListeners: shouldNotifyListeners},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setCategorySort(
    _i7.Category? category,
    _i7.CategorySort? sort,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCategorySort,
          [
            category,
            sort,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setCategoryColumnsCount(
    _i7.Category? category,
    int? columnsCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCategoryColumnsCount,
          [
            category,
            columnsCount,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setCategoryRowHeight(
    _i7.Category? category,
    int? rowHeight,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCategoryRowHeight,
          [
            category,
            rowHeight,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void addListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsService extends _i1.Mock implements _i12.SettingsService {
  MockSettingsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get crashReportsEnabled => (super.noSuchMethod(
        Invocation.getter(#crashReportsEnabled),
        returnValue: false,
      ) as bool);
  @override
  bool get analyticsEnabled => (super.noSuchMethod(
        Invocation.getter(#analyticsEnabled),
        returnValue: false,
      ) as bool);
  @override
  bool get use24HourTimeFormat => (super.noSuchMethod(
        Invocation.getter(#use24HourTimeFormat),
        returnValue: false,
      ) as bool);
  @override
  bool get appHighlightAnimationEnabled => (super.noSuchMethod(
        Invocation.getter(#appHighlightAnimationEnabled),
        returnValue: false,
      ) as bool);
  @override
  bool get unsplashEnabled => (super.noSuchMethod(
        Invocation.getter(#unsplashEnabled),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<void> setCrashReportsEnabled(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setCrashReportsEnabled,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setAnalyticsEnabled(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setAnalyticsEnabled,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setUse24HourTimeFormat(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setUse24HourTimeFormat,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setAppHighlightAnimationEnabled(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setAppHighlightAnimationEnabled,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setGradientUuid(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setGradientUuid,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> setUnsplashAuthor(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setUnsplashAuthor,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void addListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

class MockUnsplashService extends _i1.Mock implements _i5.UnsplashService {
  MockUnsplashService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i5.Photo> randomPhoto(String? query) => (super.noSuchMethod(
        Invocation.method(
          #randomPhoto,
          [query],
        ),
        returnValue: _i10.Future<_i5.Photo>.value(_FakePhoto_5(
          this,
          Invocation.method(
            #randomPhoto,
            [query],
          ),
        )),
      ) as _i10.Future<_i5.Photo>);
  @override
  _i10.Future<List<_i5.Photo>> searchPhotos(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchPhotos,
          [query],
        ),
        returnValue: _i10.Future<List<_i5.Photo>>.value(<_i5.Photo>[]),
      ) as _i10.Future<List<_i5.Photo>>);
  @override
  _i10.Future<_i17.Uint8List> downloadPhoto(_i5.Photo? photo) => (super.noSuchMethod(
        Invocation.method(
          #downloadPhoto,
          [photo],
        ),
        returnValue: _i10.Future<_i17.Uint8List>.value(_i17.Uint8List(0)),
      ) as _i10.Future<_i17.Uint8List>);
}

/// A class which mocks [FLauncherDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFLauncherDatabase extends _i1.Mock implements _i7.FLauncherDatabase {
  MockFLauncherDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get wasCreated => (super.noSuchMethod(
        Invocation.getter(#wasCreated),
        returnValue: false,
      ) as bool);
  @override
  set wasCreated(bool? _wasCreated) => super.noSuchMethod(
        Invocation.setter(
          #wasCreated,
          _wasCreated,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
      ) as int);
  @override
  _i6.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_6(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i6.MigrationStrategy);
  @override
  _i7.$AppsTable get apps => (super.noSuchMethod(
        Invocation.getter(#apps),
        returnValue: _Fake$AppsTable_7(
          this,
          Invocation.getter(#apps),
        ),
      ) as _i7.$AppsTable);
  @override
  _i7.$CategoriesTable get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: _Fake$CategoriesTable_8(
          this,
          Invocation.getter(#categories),
        ),
      ) as _i7.$CategoriesTable);
  @override
  _i7.$AppsCategoriesTable get appsCategories => (super.noSuchMethod(
        Invocation.getter(#appsCategories),
        returnValue: _Fake$AppsCategoriesTable_9(
          this,
          Invocation.getter(#appsCategories),
        ),
      ) as _i7.$AppsCategoriesTable);
  @override
  Iterable<_i6.TableInfo<_i6.Table, Object?>> get allTables => (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i6.TableInfo<_i6.Table, Object?>>[],
      ) as Iterable<_i6.TableInfo<_i6.Table, Object?>>);
  @override
  List<_i6.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i6.DatabaseSchemaEntity>[],
      ) as List<_i6.DatabaseSchemaEntity>);
  @override
  _i6.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_10(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i6.GeneratedDatabase);
  @override
  _i6.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_11(
          this,
          Invocation.getter(#options),
        ),
      ) as _i6.DriftDatabaseOptions);
  @override
  _i6.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_12(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i6.StreamQueryUpdateRules);
  @override
  _i6.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_13(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i6.DatabaseConnection);
  @override
  _i6.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _FakeSqlTypes_14(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i6.SqlTypes);
  @override
  _i6.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_15(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i6.QueryExecutor);
  @override
  _i8.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_16(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i8.StreamQueryStore);
  @override
  _i6.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_17(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i6.DatabaseConnectionUser);
  @override
  _i10.Future<List<_i7.App>> listApplications() => (super.noSuchMethod(
        Invocation.method(
          #listApplications,
          [],
        ),
        returnValue: _i10.Future<List<_i7.App>>.value(<_i7.App>[]),
      ) as _i10.Future<List<_i7.App>>);
  @override
  _i10.Future<void> persistApps(List<_i7.AppsCompanion>? applications) => (super.noSuchMethod(
        Invocation.method(
          #persistApps,
          [applications],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> updateApp(
    String? packageName,
    _i7.AppsCompanion? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateApp,
          [
            packageName,
            value,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> deleteApps(List<String>? packageNames) => (super.noSuchMethod(
        Invocation.method(
          #deleteApps,
          [packageNames],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> insertCategory(_i7.CategoriesCompanion? category) => (super.noSuchMethod(
        Invocation.method(
          #insertCategory,
          [category],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> deleteCategory(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> updateCategories(List<_i7.CategoriesCompanion>? values) => (super.noSuchMethod(
        Invocation.method(
          #updateCategories,
          [values],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> updateCategory(
    int? id,
    _i7.CategoriesCompanion? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategory,
          [
            id,
            value,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> deleteAppCategory(
    int? categoryId,
    String? packageName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAppCategory,
          [
            categoryId,
            packageName,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> insertAppsCategories(List<_i7.AppsCategoriesCompanion>? value) => (super.noSuchMethod(
        Invocation.method(
          #insertAppsCategories,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> replaceAppsCategories(List<_i7.AppsCategoriesCompanion>? value) => (super.noSuchMethod(
        Invocation.method(
          #replaceAppsCategories,
          [value],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i7.CategoryWithApps>> listCategoriesWithVisibleApps() => (super.noSuchMethod(
        Invocation.method(
          #listCategoriesWithVisibleApps,
          [],
        ),
        returnValue: _i10.Future<List<_i7.CategoryWithApps>>.value(<_i7.CategoryWithApps>[]),
      ) as _i10.Future<List<_i7.CategoryWithApps>>);
  @override
  _i10.Future<int?> nextAppCategoryOrder(int? categoryId) => (super.noSuchMethod(
        Invocation.method(
          #nextAppCategoryOrder,
          [categoryId],
        ),
        returnValue: _i10.Future<int?>.value(),
      ) as _i10.Future<int?>);
  @override
  _i6.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_18(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i6.Migrator);
  @override
  _i10.Future<void> beforeOpen(
    _i6.QueryExecutor? executor,
    _i6.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Stream<List<Map<String, Object?>>> createStream(_i8.QueryStreamFetcher? stmt) => (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i10.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i10.Stream<List<Map<String, Object?>>>);
  @override
  T alias<T, D>(
    _i6.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      throw UnsupportedError('\'alias\' cannot be used without a mockito fallback generator.');
  @override
  void markTablesUpdated(Iterable<_i6.TableInfo<_i6.Table, dynamic>>? tables) => super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdates(Set<_i6.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Stream<Set<_i6.TableUpdate>> tableUpdates([_i6.TableUpdateQuery? query = const _i6.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i10.Stream<Set<_i6.TableUpdate>>.empty(),
      ) as _i10.Stream<Set<_i6.TableUpdate>>);
  @override
  _i10.Future<T> doWhenOpened<T>(_i10.FutureOr<T> Function(_i6.QueryExecutor)? fn) => (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i10.Future<T>.value(null),
      ) as _i10.Future<T>);
  @override
  _i6.InsertStatement<T, D> into<T extends _i6.Table, D>(_i6.TableInfo<T, D>? table) => (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_19<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i6.InsertStatement<T, D>);
  @override
  _i6.UpdateStatement<Tbl, R> update<Tbl extends _i6.Table, R>(_i6.TableInfo<Tbl, R>? table) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_20<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i6.UpdateStatement<Tbl, R>);
  @override
  _i6.SimpleSelectStatement<T, R> select<T extends _i6.HasResultSet, R>(
    _i6.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_21<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i6.SimpleSelectStatement<T, R>);
  @override
  _i6.JoinedSelectStatement<T, R> selectOnly<T extends _i6.HasResultSet, R>(
    _i6.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_22<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i6.JoinedSelectStatement<T, R>);
  @override
  _i6.DeleteStatement<T, D> delete<T extends _i6.Table, D>(_i6.TableInfo<T, D>? table) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_23<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i6.DeleteStatement<T, D>);
  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i6.Variable<Object>>? variables = const [],
    Set<_i6.TableInfo<_i6.Table, dynamic>>? updates,
    _i6.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);
  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i6.Variable<Object>>? variables = const [],
    Set<_i6.TableInfo<_i6.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);
  @override
  _i10.Future<List<_i6.QueryRow>> customWriteReturning(
    String? query, {
    List<_i6.Variable<Object>>? variables = const [],
    Set<_i6.TableInfo<_i6.Table, dynamic>>? updates,
    _i6.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i10.Future<List<_i6.QueryRow>>.value(<_i6.QueryRow>[]),
      ) as _i10.Future<List<_i6.QueryRow>>);
  @override
  _i6.Selectable<_i6.QueryRow> customSelect(
    String? query, {
    List<_i6.Variable<Object>>? variables = const [],
    Set<_i6.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_24<_i6.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i6.Selectable<_i6.QueryRow>);
  @override
  _i6.Selectable<_i6.QueryRow> customSelectQuery(
    String? query, {
    List<_i6.Variable<Object>>? variables = const [],
    Set<_i6.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_24<_i6.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i6.Selectable<_i6.QueryRow>);
  @override
  _i10.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i10.Future<T>.value(null),
      ) as _i10.Future<T>);
  @override
  _i10.Future<void> batch(_i10.FutureOr<void> Function(_i6.Batch)? runInBatch) => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i6.GenerationContext $write(
    _i6.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_25(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i6.GenerationContext);
  @override
  _i6.GenerationContext $writeInsertable(
    _i6.TableInfo<_i6.Table, dynamic>? table,
    _i6.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_25(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i6.GenerationContext);
  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: '',
      ) as String);
}
